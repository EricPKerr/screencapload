#!/usr/bin/env ruby
#
# screencapload
# Clement Joubert / @czj
#
# Captures a portion of your OSX screen from the command line,
# uploads it to imgur, drops it into your clipboard.
# 
# It uses the imgur JSON v2 API and allows up to 100 uploads per hour
#
# Example:
#
#   screencapload [imgur_api_key]
#
# This requires json gem:
#
#   gem install json
#
# Passing imgur API key is optionnal if you have set your imgur
# credentials in ~/.imgur as a simple file of :
#
#   api_key
#
# Gem warnings code taken from
# https://github.com/holman/dotfiles/blob/master/bin/cloudapp

require 'rubygems'

['json', 'fileutils'].each do |gem_name|
  begin
    require gem_name
  rescue LoadError
    puts "You need to install #{gem_name}: gem install #{gem_name}"
    exit!(1)
  end
end

config_file = "#{ENV['HOME']}/.imgur"

if not ARGV[0].nil?
  api_key = ARGV[0]
elsif File.exists?(config_file)
  api_key = File.read(config_file).strip
else
  puts "Usage: screencapload [imgur_api_key]"
  puts "You can also type your imgur api key in ~/.imgur"
  exit!(1)
end

tempfile = "/tmp/screenshot-#{Time.now.to_f}.png"

# Take a screenshot on OSX
# -x = don't play sound
# -i = capture interactively (via mouse, or press space to toggle full window capture)
`/usr/sbin/screencapture -x -i '#{tempfile}'`

# Check that the screenshot was actually captured, exit if not
unless File.exists?(tempfile)
  puts "Impossible to get screen capture."
  exit!(1)
end

# Upload it to imgur.com
# CURL uses -F/--form to specify HTTP multipart POST data
# CURL uses -X/--request to request command to use
puts "Attempting to upload screen capture ..."
curl_command = "curl --silent -X POST -F 'image=@#{tempfile}' -F 'key=#{api_key}' 'http://api.imgur.com/2/upload.json'"
puts curl_command
response = `#{curl_command}`

FileUtils.rm(tempfile)

# Parse response and get original image url from JSON
json = JSON.parse(response)
url = json['upload']['links']['original']

# Copy original image url to clipboard
`printf "#{url}" | pbcopy`

puts "Uploaded screen capture to #{url}"

# Play an upload complete sound (Yoann Jean added a bang! for some Steeve Jobs emotion !)
`osascript -e 'Say "Boom!"'`